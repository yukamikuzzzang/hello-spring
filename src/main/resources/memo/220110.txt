/*
https://gmlwjd9405.github.io/2019/05/21/intellij-shortkey.html
인텔리제이 단축키
https://www.youtube.com/user/MasterNKS/playlists
자바 개념을 잡는 자바의 정석 저자님의 유튜브 강의
*/

회원 관리 예제 - 백엔드 개발
회원 도메인과 리포지토리(저장소) 만들기
회원 리포지트리 테스트 케이스 작성(junit)
회원 서비스 개발
회원 서비스 테스트

*비즈니스 요구사항 정리
(정말 가장 쉬운 걸로)

데이터: ID, 이름
기능: 회원 등록, 조회
(단순한 예제를 통해 스프링 전반의 생태계가 어떻게 이뤄지는지를 알기 위함..!)
아직 데이터 저장소가 선정되지 않음(가상의 시나리오)

성능 DB, NoSQL 등이 안 정해진 상황.

*일반적인 웹 에플리케이션 계층 구조

컨트롤러 > 서비스(핵심비즈니스로직) > 리포지토리

		도메인

서비스: 핵심 비즈니스 로직 구현(회원 중복 등록 X etc..)
리포지토리:DB에 접근. 도메인 객체를 DB에 저장하고 관리
도메인: 비즈니스 도메인 객체: 회원, 주문, 쿠폰.. DB 저장

클래스 의존관계
MemberService > interface(MemberRepository) <.. MemoryRepository

향후에 구체적인 것이 선정되는 것을 가정하여 인터페이스로 구현 클래스를 변경하도록 설계.
RDB, NoSQL 등을 고민중인 상황
개발을 위해 구현체로 가벼운 메모리 기반의 데이터 저장소 사용.

//회원 도메인과 리포지토리 만들기
Optional?
자바8에 나온 것.
findById
findByName
을 Optional로 감싸서 반환하는 기능. Null값 대비

내가 짠 로직이 잘 작동하는지 확인하는 방법..!
테스트 케이스를 만들자..!

-참조
예시로짠 HashMap에서 받는 코드가 왜 id와 Member객체를 저장하는가.. Member객체에도 id의 값이 있지 않는가..?
https://www.inflearn.com/questions/324935
멤버객체의 확장성 고려, 필요한 데이터를 모두 불러오지 못함.

Spring Layered Architecture와 MVC
https://yoonho-devlog.tistory.com/25
표현부분안에 MVC에 해당하는 내용이 들어있다.

이름을 Optional.ofNullable로 찾지 않고 전체를 돌면서 찾는 이유. 이름 값은 중복이 될 수 있기 때문.
https://bit.ly/3r61T0A

NullPointerException의 대한 예외처리보다 자원이 적게 소모되고 트래킹하기 편한 Optional
https://www.inflearn.com/questions/90949

//회원 리포지토리와 테스트 케이스 작성
리포지토리에선 서비스를 만들어서 테스트 하곤 했는데..
Ctrl+Shift+T ...> Create New Test
Junit5로 테스트.. 어떤 것들을 테스트할지 골라서 테스트 케이스를 만들 수 있음. (껍데기 자동생성)
만들어진 경로도 test라는 것을 제외하곤 동일.
내가 만든 것이 정상적으로 작동할까..?
코드를 코드로 검증하기!

자바의 main 메소드로 실행하거나 웹 에플리케이션 컨트롤러를 통해 해당 기능을 실행.

이러한 방법은 준비와 실행, 반복 실행의 어려움, 여러 테스트를 한 번에 실행하기에도 어려움
자바는 Junit으로 이를 해결.

테스트의 관례?
같은 파일이름(클래스 등)에 Test를 붙여줌.
다른데서 쓸 게 아니기에 굳이 public을 붙여줄 필요는 없음.

실행하려는 메서드에 @Test 어노테이션을 붙여주면 해당 메서드를 테스트 해볼 수 있음.

Ctrl+Shift+Enter
바로 단락으로 내려옴.
저장한 것과 메서드에서 꺼낸 값이 같다면 참..!

Assertions를 이용하면 이 비교를 쉽게 할 수 있음.
Assertions.assertEquals(member,result);

Shift+F6 : Rename
중복되는 코드(변수)들을 모두 바꿔줌.. ㄴㅇㄱ

테스트 케이스의 장점..!
전체 클래스를 테스트 해볼 수 있다..!

모든 테스트는 순서를 보장하지 않음.
findAll()이 먼저 실행.
이전에 저장되었던 것이 나옴..
그래서 테스트가 끝나면 (리포지토리) 데이터를 날릴 수 있도록 해야함.

MemoryMemberRepository
(테스트 말고 원본)을 수정해야함.

테스트는 서로의 의존관계가 없도록 해야함.
공용 저장소를 깔끔하게 지워줄 필요가 있음.

원본에 clear에 해당하는 부분을 만듬.
@AfterEach에는 리파지토리를 clear하는 메서드를 작성.

테스트를 먼저 작성하고 멤버메모리리파지토리를 만들 수 있음. "틀을 먼저 만드는 것" TDD
테스트를 먼저 만들고 구현 클래스를 만들어 돌리는 것.

테스트가 수십 수백개가 된다면..?
gradlew를 띄우고 테스트를 돌려도 된다.
test가 없다면..

나 혼자 하는 거라면 몰라도 몇 십만 줄이 넘어가기 시작하면 테스트 케이스가 없다면 굉장히 복잡한 일 투성..

-참조
TestDrivenDevelopment(TDD)
관련 자료 및 도서
'TDD 실천법과 도구'
https://repo.yona.io/doortts/blog/issue/1
'유료강의'
https://edu.nextstep.camp/c/9WPRB0ys/

//회원 서비스 클래스 개발
회원 리포지토리를 활용해서 비즈니스 로직을 만듬.
회원 서비스를 위해
서비스 리포지토리도 생성해줘야함.

ifPresent( )
result에 null이 아니라 해당하는 값이 있다면..

optional안에 member를 감싸서 해당하는 메서드를 쓸 수 있음. if null.. 같은 걸 써줄 필요가 없음.

값이 있으면 꺼내고 그렇지 않으면  else를 실행해..

optional을 바로 반환하는 게 별로 예쁘지 않음.
result가 반환하기에 바로 ifPresent가 들어갈 수 있음.

서비스 클래스는..  join, findMembers
서비스 클래스는 비즈니스로직에 가까운 이름을 잡는 것이 좋다. 누군가가 요청을 할 때 어떤 부분에 문제가 있는지 알 수 있다. 

Repository는 데이터를 넣고 빼니 기계적으로 서비스는 비즈니스적으로 명명

해당 서비스를 검증하는 방법이 필요.
콘트롤러로 일일이 하던지
메인메서드를 쓰던지...
해도 되겠지만 우리가 배운 테스트 케이스 제작..! 
이 방법을 써서 해결해보자..!

-참조
단축키 팁
커맨드:Ctrl
옵션:Alt

성별을 남녀의 값만 받아서 ((M,F)처럼..) Charactor형으로 받을 순 없을까..?
https://bit.ly/33clTq9
굳이 그럴 필요없어요..

자바에서 final의 역할
https://bit.ly/3HPt1rz
값을 생성자에서 초기화한 이후 변경할 수 없다.

상위타입 = new 하위타입();
다형성
상위타입으로 타입의 제한을 두면서 향후 변경시에 그 안에서 자유롭게 변경 가능하도록 하기 위함. (울타리를 치는 느낌. 제약을 부여)
https://www.inflearn.com/questions/47449
정말로 해당 기능만을 사용해야한다면 HashMap ** = new HashMap();

DI(의존관계 주입)

//회원 서비스 테스트
테스트는 사실.. 과감하게 한글로 써도 상관없습니다.
실제 동작하는 것들은 한글로 적기 애매하지만.. 테스트는 (영어권 사람들이 아니라면) 한글로도 가능. 또한 해당 코드는 실제 코드에 포함되지 않음.

서비스 테스트 팁
//given 뭔가 주어졌는데	/ 어떤 데이터를 넣는구나
//when 이를 실행했을 때	/ 이걸 검증하는구나
//then  이게 나와야해!	/ 여기가 검증부구나

테스트가 길어질수록 도움이 됨.
상황에 따라 안맞는 경우도 있지만 도움이 됨.

alt+Enter: static import
테스트는 정상적일 때도 중요하지만 에러가 낫을 때의 테스트가 더욱 중요함.

join의 핵심. 중복 회원 검증에서 예외가 터지는 경우를 확인하는 것이 좋다.

1. assertThrows를 이용
2. try ~ catch를 이용

다수의 테스트를 실행시켰을 때 이미 저장된 값으로 인해 에러 발생. 값을 비워줄 필요가 있음.
그런데 문제가 있다..?

memberService밖에 없어 힘든 상황
Repository가 필요

이전에 실행한 것을 그대로 실행해줌.
Shift + F10

조금 애매한 부분?
Service에 있는 리파지토리랑
Test에 있는 리파지토리
각각 다른 객체로서 생성되어 있는 상황

static 클래스 레벨에 붙는 것.
new로 다른 객체의 리파지토리가 생성된다면 내용물이 달라질 수 있는 문제가 생길 수도 있음.

MemberService ..> MemRepo
MemverServiceTest ...> MemRepo
각각 다른 객체. static이 아니었으면 진작에 문제가 생겼음.
다른 리파지토리가 테스트되고 있는 상황.

같은 인스턴스를 쓰도록 바꾸려면..?
멤버 서비스를 new해서 생성하는 것이 아닌 외부에서 넣어주도록 바꿈.

@BeforeEach


-참조
바로 위에 있던 참조 부분과 동일한 내용.
해당 코드와 밀접하게 관련되어있음.

https://bit.ly/34vgcnP

나중에.. Autowired와 @SpringBootTest 와의 연관성?
https://bit.ly/33iHz3O


부모한테 없는 메서드를 실행하기 위해선
자식 = new 자식();
https://bit.ly/34ruxSc

@Test의 개수만큼 객체수가 생성된다?
프로젝트 따라 다르겠지만..
여기서는 공통으로 사용되는 것으로 static을 사용.
공용. ...>그래서 map을 clear 해주는 메서드를 추가시켜준 것.
https://bit.ly/3JSKP6W

테스트에서 메인으로 의존성을 주입할 때에 테스트를 실행하지 않으면 메인 또한 실행되지 않는 것인가?
https://bit.ly/3r0ycxX

java에서 구현한 코드를 test에서 임포트해서 잘 동작하는지 테스트. 서로 별개의 영역. app이 실행되는 동안에도 test를 진행할 수 있다.


```
test부분에서 memberService에 repository를 넣은 다음에 main부분을 실행해야 하는구나(X) - test를 main의 예행단계라고 착각하심

test부분에서 memberService에 repository를 넣는 것을(DI) main부분에도 해줘야 하는구나(O)

```